#sampling from a distribution
plot(lamdas,posterior, type = 'l',col='blue')
#Simmulation(hidden).
lamdas <-seq(0,4,length.out = 201)
prior <-dunif(lamdas, min = 0, max = 4, log = FALSE)
posterior = prior * likelihood
#sampling from a distribution
plot(lamdas,posterior, type = 'l',col='blue')
likelihood <-sapply(lamdas, function(lamda) {return(prod(dpois(D, lamda)))})
likelihood <-sapply(lamdas, function(lamda) {return(prod(dpois(D, lamda)))})
D <- c(0, 0, 1, 2, 0, 2, 2, 1, 1)
#Simmulation(hidden).
lamdas <-seq(0,4,length.out = 201)
likelihood <-sapply(lamdas, function(lamda)
{return(prod(dpois(D, lamda)))})
prior <-dunif(lamdas, min = 0, max = 4, log = FALSE)
posterior = prior * likelihood
#sampling from a distribution
plot(lamdas,posterior, type = 'l',col='blue')
#sampling from a distribution
plot(lamdas,posterior, type = 'l',col='red')
D <- c(0, 0, 1, 2, 0, 2, 2, 1, 1)
lamdas <-seq(0,4,length.out = 201)
likelihood <-sapply(lamdas, function(lamda)
{return(prod(dpois(D, lamda)))})
prior <-dunif(lamdas, min = 0, max = 4, log = FALSE)
posterior = prior * likelihood
#sampling from a distribution
plot(lamdas,posterior, type = 'l',col='red')
#sampling from a distribution
plot(lamdas,posterior, type = 'l',col='green')
#sampling from a distribution
plot(lamdas,posterior, type = 'l',col='purple')
library(plotly)
D <- c(0.3120639, 0.5550930, 0.2493114 ,0.9785842)
mu_s <- seq(0,1,length.out = 201)
sigmas_s <- seq(0,1,length.out = 201)
n  = 201
out <- numeric(n)
for(i in 1:n) {out[i] <- prod(dnorm(D, mean = mu_s[i], sd = sigmas_s[i]))}
mu_prior <- dunif(mu_s, min = 0, max = 1, log = FALSE)
sigma_prior <- dunif(sigmas_s, min = 0, max = 1, log = FALSE)
posterior = out * mu_prior * sigma_prior
plot(mu_s,posterior, type = 'l',col='blue')
fig <- plot_ly(
x = ~mu_s, y = ~sigmas_s,
color = ~posterior, size = ~posterior
)
fig <- plot_ly(x = ~mu_s, y = ~sigmas_s,color = ~posterior, size = ~posterior)
fig <- plotly(x = ~mu_s, y = ~sigmas_s,color = ~posterior, size = ~posterior)
fig <-plot_ly(x = ~mu_s, y = ~sigmas_s,color = ~posterior, size = ~posterior)
fig <- plot_ly(x = ~mu_s, y = ~sigmas_s,color = ~posterior, size = ~posterior)
library(plotly)
install.packages("plotly")
library(plotly)
D <- c(0.3120639, 0.5550930, 0.2493114 ,0.9785842)
mu_s <- seq(0,1,length.out = 201)
sigmas_s <- seq(0,1,length.out = 201)
n  = 201
out <- numeric(n)
for(i in 1:n) {out[i] <- prod(dnorm(D, mean = mu_s[i], sd = sigmas_s[i]))}
mu_prior <- dunif(mu_s, min = 0, max = 1, log = FALSE)
sigma_prior <- dunif(sigmas_s, min = 0, max = 1, log = FALSE)
posterior = out * mu_prior * sigma_prior
plot(mu_s,posterior, type = 'l',col='blue')
fig <- plot_ly(x = ~mu_s, y = ~sigmas_s,color = ~posterior, size = ~posterior)
fig
plot(mu_s,posterior, type = 'l',col='purple')
fig <- plot_ly(x = ~mu_s, y = ~sigmas_s,color = ~posterior, size = ~posterior)
fig
mu_prior <- dunif(mu_s, min = 0, max = 1, log = FALSE)
sigma_prior <- dunif(sigmas_s, min = 0, max = 1, log = FALSE)
posterior = out * mu_prior * sigma_prior
plot(mu_s,posterior, type = 'l',col='purple')
fig <- plot_ly(x = ~mu_s, y = ~sigmas_s,color = ~posterior, size = ~posterior)
fig
plot(mu_s,posterior, type = '4',col='purple')
fig <- plot_ly(x = ~mu_s, y = ~sigmas_s,color = ~posterior, size = ~posterior)
fig
library(plotly)
D <- c(0.3120639, 0.5550930, 0.2493114 ,0.9785842)
mu_s <- seq(0,1,length.out = 201)
sigmas_s <- seq(0,1,length.out = 201)
n  = 201
out <- numeric(n)
for(i in 1:n) {
out[i] <- prod(dnorm(D, mean = mu_s[i], sd = sigmas_s[i]))}
mu_prior <- dunif(mu_s, min = 0, max = 1, log = FALSE)
sigma_prior <- dunif(sigmas_s, min = 0, max = 1, log = FALSE)
posterior = out * mu_prior * sigma_prior
plot(mu_s,posterior, type = '1',col='purple')
fig <- plot_ly(x = ~mu_s, y = ~sigmas_s,color = ~posterior, size = ~posterior)
fig
